version: '3.8'

services:
  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonar
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    networks:
      - sonarqube-network

  sonar-db:
    image: postgres:latest
    container_name: sonarqube_db
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    volumes:
      - sonar_db:/var/lib/postgresql/data
    networks:
      - sonarqube-network
  
  sonar-scanner:
    image: sonarsource/sonar-scanner-cli:latest
    container_name: sonar_scanner
    restart: always
    volumes:
      - /test:/usr/src
    entrypoint: ["/bin/sh", "-c", "sonar-scanner -Dsonar.projectKey=test -Dsonar.sources=/usr/src -Dsonar.host.url=http://sonarqube:9000 -Dsonar.token=sqp_f483cd2976adfe707e27c9de4d9b2681f2cad7ad"]
    networks:
      - sonarqube-network
    depends_on:
      - sonarqube

networks:
  sonarqube-network:
    driver: bridge

volumes:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
  sonar_db:
